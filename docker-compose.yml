version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yourpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    env_file:
      - ./auth_service/.env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      DJANGO_DEBUG: "False"
      ALLOWED_HOSTS: "localhost,auth_service,nginx"
      CORS_ALLOWED_ORIGINS: "http://localhost,http://frontend,http://nginx"
    depends_on:
      - postgres
    ports:
      - "8001:8001"

  compiler_service_web:
    build:
      context: ./compiler_service
      dockerfile: Dockerfile
    env_file:
      - ./compiler_service/.env
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      DJANGO_DEBUG: "False"
      ALLOWED_HOSTS: "localhost,compiler_service_web,nginx"
      CORS_ALLOWED_ORIGINS: "http://localhost,http://frontend,http://nginx"
    depends_on:
      - redis
      - rabbitmq
    ports:
      - "8002:8002"
    # By default, runs the web process (Daphne)

  compiler_service_worker:
    build:
      context: ./compiler_service
      dockerfile: Dockerfile
    env_file:
      - ./compiler_service/.env
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      DJANGO_DEBUG: "False"
    depends_on:
      - redis
      - rabbitmq
    command: ["worker"]

  frontend:
    build:
      context: ./compiler-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - auth_service
      - compiler_service_web

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - auth_service
      - compiler_service_web
      - frontend

volumes:
  postgres_data:
